plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java-library'
    id 'maven-publish'
    id 'io.freefair.lombok'
    id 'java-test-fixtures'
    id 'org.gradle.test-retry'
    id 'com.google.cloud.tools.jib'
    id 'jacoco'
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://nexus.billforward.co/repository/maven-thirdparty/')
    }
    maven {
        url = uri('https://nexus.billforward.co/repository/maven-releases/')
    }
    maven {
        url = uri('https://jitpack.io')
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.5'
        mavenBom 'com.google.cloud:libraries-bom:24.3.0'
    }
}

dependencies {
    compileOnly 'org.immutables:value:2.9.0'
    annotationProcessor 'org.immutables:value:2.9.0'
    testCompileOnly 'org.immutables:value:2.9.0'
    testAnnotationProcessor 'org.immutables:value:2.9.0'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

group = 'tests'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jib {
    container.environment = [JAVA_TOOL_OPTIONS: "-XX:+UseStringDeduplication -XX:MaxRAMPercentage=70"]
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['resources']
        }
    }
    test {
        java {
            srcDirs = ['test']
        }
        resources {
            srcDirs = ['test/resources']
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    maxHeapSize = "2g"

    filter {
        excludeTestsMatching "skipTheseTests"
    }
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}
